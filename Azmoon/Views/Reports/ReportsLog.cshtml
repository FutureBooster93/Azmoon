@using Azmoon.ViewModels
@model ReportsViewModel
@{
	var selected = Model.combinedList;
}
@* @{
    var title = TempData["Title"] as string;

    var intId = ViewBag.tempdataId as List<int>;
    var stringFirstName = ViewBag.tempdataFName as List<string>;
    var stringLastName = ViewBag.tempdataLName as List<string>;
    var stringPostalCode = ViewBag.tempdataPostalCode as List<string>;
    var stringTel = ViewBag.tempdataTel as List<string>;
    var stringEmail = ViewBag.tempdataEmail as List<string>;

    var combinedList = new List<object>();

    if (intId != null)
    {
        combinedList.AddRange(intId.Select(i => i.ToString()));
    }
    if (stringFirstName != null)
    {
        combinedList.AddRange(stringFirstName.Select(i => i.ToString()));
    }
    if (stringLastName != null)
    {
        combinedList.AddRange(stringLastName.Select(i => i.ToString()));
    }
    if (stringPostalCode != null)
    {
        combinedList.AddRange(stringPostalCode.Select(i => i.ToString()));
    }
    if (stringTel != null)
    {
        combinedList.AddRange(stringTel.Select(i => i.ToString()));
    }
    if (stringEmail != null)
    {
        combinedList.AddRange(stringEmail.Select(i => i.ToString()));
    }
} *@

<body>

	<div class="card-header bg-secondary bg-gradient m-lg-0 py-3">
		<div class="row">
			<h1 class="text-white">Reports</h1>
		</div>
	</div>
	<div class="container row mt-4 mb-4">
		<div class="col-6">
			<span>Title:</span>
			<input class="border" value="@Model.Title" readonly> </input>
		</div>
		<div class="col-6">
			<select class="container">
				@if (Model.combinedList != null)
				{

					@foreach (object item in Model.combinedList)
					{
						<option hidden>Reports is here</option>
						<option>@item</option>
					}
				}


			</select>
		</div>
	</div>
	<div class="container col-3 ">
		<a asp-action="GetAllDatas" asp-controller="AzmoonTest" class="btn btn-danger mt-3">Back</a>
	</div>
	<div class="container col-3 ">
		<a asp-action="PrintPdf" asp-controller="Reports" asp-route-data="@Model.combinedList" class="btn btn-warning mt-3">Report</a>
		<a id="exportButton" class="btn btn-warning mt-3">Aspose Report</a>
	</div>
</body>

@section Scripts {
	<script>


		document.getElementById('exportButton').addEventListener('click', function () {

			const selectedArray = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(selected));

			fetch('/api/Aspose/export', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(selectedArray)
			})
				.then(response => {
					if (!response.ok) {
						throw new Error('Network response was not ok');
					}
					return response.blob();
				})
				.then(blob => {
					const url = window.URL.createObjectURL(blob);
					const a = document.createElement('a');
					a.style.display = 'none';
					a.href = url;
					a.download = 'Export.xlsx';
					document.body.appendChild(a);
					a.click();
					window.URL.revokeObjectURL(url);
				})
				.catch(error => console.error('There was a problem with the fetch operation:', error));
		});

	</script>
}
